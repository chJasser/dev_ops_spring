version: "3.7"

services:

  app:
    working_dir: /spring-app
    build:
      context: .
      dockerfile: Dockerfile
    image: $REGISTRY:$TAG
    restart: on-failure
    container_name: $SPRING_CONTAINER
    depends_on:
      - dbSpring
    networks:
      - spring-network
    env_file: .env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
          "spring.datasource.url"  : "jdbc:mysql://dbSpring:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false&createDatabaseIfNotExists=true",
          "spring.datasource.username" : "$MYSQLDB_USER",
          "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
          "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
          "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    volumes:
      - .m2:/root/maven-repo
    stdin_open: true
    tty: true


  dbSpring:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    container_name: dbSpring
    networks:
      - spring-network
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - tpstockdb:/var/lib/mysql

#  prometheus:
#    image: prom/prometheus
#    volumes:
#      - ./config/:/etc/prometheus
#      - ./data-prometheus:/data
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--storage.tsdb.retention=31d'
#      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#      - '--web.console.templates=/usr/share/prometheus/consoles'
#    ports:
#      - "9090:9090"
#    depends_on:
#      - app
#    networks:
#      - spring-network
#    restart: on-failure
#
#
#  grafana:
#    image: grafana/grafana
#    ports:
#      - "3000:3000"
#    depends_on:
#      - prometheus
#    networks:
#      - spring-network

networks:
  spring-network:
    name: spring-network

volumes:
  .m2:
  tpstockdb:
  prometheus_data: { }
