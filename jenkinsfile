pipeline {
    agent any
    environment {
        TAG = '1.0'
    }
    stages {
      
       stage('Clean') {
            steps {
                sh 'mvn clean'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn -Dmaven.test.skip=true package'
            }
        }


        stage('install') {
            steps {
                sh 'mvn  -Dmaven.test.skip=true install '

            }

        }
        stage('JUNIT/MOCKITO') {
            steps {
                sh 'mvn test'

            }

        }
       stage('sonar') {
            steps{
            	 sh '''
                 mvn sonar:sonar -Dsonar.login='admin' -Dsonar.password='fakher'
                 '''
            	 }
        }
      /* stage('nexus_Stage') {
                           	steps{
                    	   	     sh 'mvn -Dmaven.test.skip=true deploy'
                                   

                    	   	}

                       }*/
     

  stage('build_push_image') {

              steps {
                        script {
                              def dockerImage = docker.build("fakher14/tpachat")
                            //  docker.withRegistry('','registryCredential'){
                              //           dockerImage.push("latest")
                               //}
                          }
              }
        }
       
        /*  stage('start container') {
            steps {
                echo 'start container'
                sh 'docker-compose up -d'
               
            }
        }*/
      //  stage('Docker hub push') {
        //   steps {
          //      script {
            //        echo "Docker push"
              //  withCredentials([string(credentialsId: 'tpachat', variable: 'docker')]) {
                //       sh 'docker login -u fakher14 -p ${docker}'
                  //     sh 'docker push fakher14/tpachat:latest'
                    //   sh 'docker logout'
               //    }
              // }
         //  }
      //  }
       


    }
   

    }
